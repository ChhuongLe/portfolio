{"version":3,"sources":["components/Images/catLogo.jpg","components/NavBar/NavBar.jsx","components/Landing/Landing.jsx","components/Images/frontPageEdit.png","components/Images/databaseImage.png","components/Images/healthyFoodsEdit.PNG","components/Images/recyclePGEdit.png","components/Projects/Projects.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","src","logo","alt","Landing","Projects","role","href","FEC","SDC","Billy","RPG","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAAe,G,MAAA,IAA0B,qC,OC2B1BA,EAlBA,WACb,OACE,sBAAKC,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,WAAWC,GAAI,QAA/B,SACE,sBAAKD,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAOE,IAAKC,EAAMC,IAAI,kBACrC,oBAAIJ,UAAU,QAAd,6BAGR,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,MAAMC,GAAG,sBAAzB,sBACA,cAAC,IAAD,CAAMD,UAAU,MAAMC,GAAG,mBAAzB,mBACA,cAAC,IAAD,CAAMD,UAAU,MAAMC,GAAG,qBAAzB,+BCXOI,EARC,WACd,OACE,yDCJW,G,MAAA,IAA0B,2CCA1B,MAA0B,0CCA1B,MAA0B,6CCA1B,MAA0B,0CCgC1BC,EAzBE,WAEf,OACE,sBAAKN,UAAU,oBAAf,UACE,qBAAKA,UAAU,MAAMO,KAAK,SAA1B,SACE,oBAAGC,KAAK,+CAAR,UAAuD,qBAAKN,IAAKO,EAAKL,IAAI,kBACxE,qBAAKJ,UAAU,kBAAf,kCAGJ,sBAAKA,UAAU,MAAf,UACE,qBAAKE,IAAKQ,EAAKN,IAAI,kBACnB,qBAAKJ,UAAU,kBAAf,kCAEF,sBAAKA,UAAU,YAAf,UACE,qBAAKE,IAAKS,EAAOP,IAAI,kBACrB,qBAAKJ,UAAU,kBAAf,kCAEF,sBAAKA,UAAU,MAAf,UACE,qBAAKE,IAAKU,EAAKR,IAAI,kBACnB,qBAAKJ,UAAU,kBAAf,+BCAOa,MAff,WACE,OACE,cAAC,IAAD,UACE,sBAAKb,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,cAAcC,UAAWX,IAC3C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,kBAAkBC,UAAWX,IAC/C,cAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,sBAAsBC,UAAWV,aCP9CW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0bf623c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/catLogo.e6d8f85d.jpg\";","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Link,\n} from 'react-router-dom';\nimport './NavBar.css';\n\nimport logo from '../Images/catLogo.jpg';\n\nconst NavBar = () => {\n  return (\n    <div className=\"ContainerNavBar\">\n        <Link className=\"logoLink\" to ='/home'>\n          <div className=\"logoContainer\">\n            <img className=\"logo\" src={logo} alt=\"not available\" />\n            <h1 className=\"title\">Loki's Den</h1>\n          </div>\n        </Link>\n    <div className=\"buttonContainer\">\n        <Link className=\"btn\" to='/portfolio/projects'>Projects</Link>\n        <Link className=\"btn\" to='/portfolio/about'>About</Link>\n        <Link className=\"btn\" to='/portfolio/contact'>Contact Me</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default NavBar;","import React from 'react';\n\nconst Landing = () => {\n  return(\n    <div>\n      This is the main page\n   </div>\n  );\n}\n\nexport default Landing;","export default __webpack_public_path__ + \"static/media/frontPageEdit.10a95a99.png\";","export default __webpack_public_path__ + \"static/media/databaseImage.d0907457.png\";","export default __webpack_public_path__ + \"static/media/healthyFoodsEdit.cf6cccc2.PNG\";","export default __webpack_public_path__ + \"static/media/recyclePGEdit.e50a0360.png\";","import React, { useState } from 'react';\nimport './Projects.css';\nimport FEC from '../Images/frontPageEdit.png';\nimport SDC from '../Images/databaseImage.png';\nimport Billy from '../Images/healthyFoodsEdit.PNG';\nimport RPG from '../Images/recyclePGEdit.png';\n\nconst Projects = () => {\n  // Todo: make individual projects into components for modularity\n  return (\n    <div className=\"ContainerProjects\">\n      <div className=\"FEC\" role=\"button\">\n        <a href=\"https://github.com/ChhuongLe/project-catwalk\"><img src={FEC} alt=\"not available\" />\n          <div className=\"img_description\">Project-Catwalk</div>\n        </a>\n      </div>\n      <div className=\"SDC\">\n        <img src={SDC} alt=\"not available\" />\n        <div className=\"img_description\">Atlier QA Backend</div>\n      </div>\n      <div className=\"BlueOcean\">\n        <img src={Billy} alt=\"not available\" />\n        <div className=\"img_description\">Health Foods Inc.</div>\n      </div>\n      <div className=\"RPG\">\n        <img src={RPG} alt=\"not available\" />\n        <div className=\"img_description\">Recycle PG</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Projects;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport NavBar from './components/NavBar/NavBar';\nimport Landing from './components/Landing/Landing';\nimport Projects from './components/Projects/Projects';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Switch>\n          <Route exact path='/portfolio/' component={Landing} />\n          <Route exact path='/portfolio/home' component={Landing} />\n          <Route exact path='/portfolio/projects' component={Projects} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}